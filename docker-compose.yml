version: '3.8'

services:
  # Your Go API Service
  myapi:
    container_name: financial_tracker_api # A friendly name for the container
    build:
      context: . # Use the current directory (where this file is) as build context
      dockerfile: Dockerfile # Specify the Dockerfile name
    ports:
      # You can change the HOST port (left side) if 8080 is busy on your server (e.g., "8090:8080")
      - "8080:8080"
    environment:
      # --- Pass environment variables required by your Go App (loaded by Viper) ---
      - DATE_LAYOUT=02-01-2006
      - SERVER_PORT=8080
      - TIMEOUT_MS_DATABASE=5000
      - TIMEOUT_MS_REQUEST=10000
      # Databse variables
      - DB_DATABASE=finance_tracker
      - DB_URI=mongodb://mongodb:27017/
      # Set Gin to release mode for production performance/logging
      - GIN_MODE=release

      - API_SECRET_TOKEN # DONT DELETE i dunno why but this has to be here for portainer
    depends_on:
      - mongodb
    restart: unless-stopped # Keep the service running
    networks:
      - financial-tracker-net

  # MongoDB Service
  mongodb:
    image: mongo:latest 
    container_name: financial_tracker_db
    ports:
      - "27017:27017"
    volumes:
      # Persist MongoDB data using a named volume managed by Docker.
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - financial-tracker-net

# Define Networks
networks:
  financial-tracker-net:
    driver: bridge # Use the default bridge network driver

# Define Volumes
volumes:
  mongodb_data: {} # Declare the named volume; Docker manages its storage location.
                  # Do NOT use 'external: true' here if this stack manages the volume.